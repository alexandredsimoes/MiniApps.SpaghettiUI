<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FeatherHttp</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Configuration.Configuration">
            <summary>
            Configuration is mutable configuration object. It is both a configuration builder and an IConfigurationRoot. 
            As sources are added, it updates its current view of configuration. Once Build is called, configuration is frozen.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.Configuration.Item(System.String)">
            <summary>
            Gets or sets a configuration value.
            </summary>
            <param name="key">The configuration key.</param>
            <returns>The configuration value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Configuration.GetSection(System.String)">
            <summary>
            Gets a configuration sub-section with the specified key.
            </summary>
            <param name="key">The key of the configuration section.</param>
            <returns>The <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection"/>.</returns>
            <remarks>
                This method will never return <c>null</c>. If no matching sub-section is found with the specified key,
                an empty <see cref="T:Microsoft.Extensions.Configuration.IConfigurationSection"/> will be returned.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Configuration.GetChildren">
            <summary>
            Gets the immediate descendant configuration sub-sections.
            </summary>
            <returns>The configuration sub-sections.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Configuration.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.Extensions.Configuration.Configuration"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.RequestBindingExtensions">
            <summary>
            Various extension methods for parsing request data from routes, query strings and and the form
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.TryGet``1(Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String,``0@)">
            <summary>
            Attempts to represent the specified route parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="routeValues">The route values</param>
            <param name="name">The route parameter name</param>
            <param name="value">The result of the conversion was successful.</param>
            <returns>true if the parse operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.Get``1(Microsoft.AspNetCore.Routing.RouteValueDictionary,System.String)">
            <summary>
            Attempts to represent the specified route parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="routeValues">The route values</param>
            <param name="name">The route parameter name</param>
            <returns>A tuple of the converted value and a bool that determined is the operation was successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.TryGet``1(Microsoft.AspNetCore.Http.IQueryCollection,System.String,``0@)">
            <summary>
            Attempts to represent the specified query string parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="query">The query string values</param>
            <param name="name">The query string parameter name</param>
            <param name="value">The result of the conversion was successful.</param>
            <returns>true if the parse operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.Get``1(Microsoft.AspNetCore.Http.IQueryCollection,System.String)">
            <summary>
            Attempts to represent the specified query string parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="query">The query string values</param>
            <param name="name">The query string parameter name</param>
            <returns>A tuple of the converted value and a bool that determined is the operation was successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.TryGet``1(Microsoft.AspNetCore.Http.IFormCollection,System.String,``0@)">
            <summary>
            Attempts to represent the specified form parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="form">The form values</param>
            <param name="name">The form parameter name</param>
            <param name="value">The result of the conversion was successful.</param>
            <returns>true if the parse operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.RequestBindingExtensions.TryGet``1(Microsoft.AspNetCore.Http.IFormCollection,System.String)">
            <summary>
            Attempts to represent the specified form parameter as the specified type.
            </summary>
            <typeparam name="TValue">The target type to convert to.</typeparam>
            <param name="form">The form values</param>
            <param name="name">The form parameter name</param>
            <returns>A tuple of the converted value and a bool that determined is the operation was successful.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.WebApplication">
            <summary>
            The web application used to configure the http pipeline, and routes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.Services">
            <summary>
            The application's configured services.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.Configuration">
            <summary>
            The application's configured <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.Environment">
            <summary>
            The application's configured <see cref="T:Microsoft.AspNetCore.Hosting.IWebHostEnvironment"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.ApplicationLifetime">
            <summary>
            Allows consumers to be notified of application lifetime events.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.LoggerFactory">
            <summary>
            The logger factory for the application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.Logger">
            <summary>
            The default logger for the application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.Addresses">
            <summary>
            The list of addresses that the HTTP server is bound to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplication.ServerFeatures">
            <summary>
            A collection of HTTP features of the server.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.Listen(System.String[])">
            <summary>
            Sets the URLs the web server will listen on.
            </summary>
            <param name="urls">A set of urls.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.CreateBuilder">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> class with pre-configured defaults.
            </summary>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.CreateBuilder(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/> class with pre-configured defaults.
            </summary>
            <param name="args">Command line arguments</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.Create(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> class with pre-configured defaults.
            </summary>
            <param name="args">Command line arguments</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.Create">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/> class with pre-configured defaults.
            </summary>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start the application.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Shuts down the application.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.Dispose">
            <summary>
            Disposes the application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.RunAsync(System.Threading.CancellationToken)">
            <summary>
            Runs an application and returns a Task that only completes when the token is triggered or shutdown is triggered.
            </summary>
            <param name="cancellationToken">The token to trigger shutdown.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>that represents the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplication.Run">
            <summary>
            Runs an application and block the calling thread until host shutdown.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder">
            <summary>
            A builder for web applications and services.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.#ctor">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Builder.WebApplicationBuilder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Environment">
            <summary>
            Provides information about the web hosting environment an application is running.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Services">
            <summary>
            A collection of services for the application to compose. This is useful for adding user provided or framework provided services.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Configuration">
            <summary>
            A collection of configuration providers for the application to compose. This is useful for adding new configuration sources and providers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Logging">
            <summary>
            A collection of logging providers for the applicaiton to compose. This is useful for adding new logging providers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Server">
            <summary>
            A builder for configuring server specific properties. 
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Host">
            <summary>
            A builder for configure host specific properties.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build">
            <summary>
            Builds the <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>.
            </summary>
            <returns>A configured <see cref="T:Microsoft.AspNetCore.Builder.WebApplication"/>.</returns>
        </member>
    </members>
</doc>
